/*$file${HSMs::../src::alarm.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/
/*
* Model: ClockAlarm.qm
* File:  ${HSMs::../src::alarm.h}
*
* This code has been generated by QM 5.2.2 <www.state-machine.com/qm>.
* DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
*
* SPDX-License-Identifier: GPL-3.0-or-later
*
* This generated code is open source software: you can redistribute it under
* the terms of the GNU General Public License as published by the Free
* Software Foundation.
*
* This code is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
* FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
* more details.
*
* NOTE:
* Alternatively, this generated code may be distributed under the terms
* of Quantum Leaps commercial licenses, which expressly supersede the GNU
* General Public License and are specifically designed for licensees
* interested in retaining the proprietary status of their code.
*
* Contact information:
* <www.state-machine.com/licensing>
* <info@state-machine.com>
*/
/*$endhead${HSMs::../src::alarm.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
#ifndef ALARM_H
#define ALARM_H

/*$declare${HSMs::Alarm} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${HSMs::Alarm} ...........................................................*/
typedef struct Alarm {
/* protected: */
    QHsm super;

/* private: */
    uint32_t alarm_time;
    uint8_t alarm_status;
} Alarm;

/* public: */
void Alarm_init(Alarm * const me);
void Alarm_Dispatch(Alarm * const me);
void Alarm_set_alarm_time(Alarm * const me,
    uint32_t alarm_time);
void Alarm_set_status(Alarm * const me,
    uint8_t status);
uint32_t Alarm_get_alarm_time(Alarm * const me);

/* protected: */
QState Alarm_initial(Alarm * const me);
QState Alarm_ALARM(Alarm * const me);
/*$enddecl${HSMs::Alarm} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/
/*$declare${HSMs::Alarm_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv*/

/*${HSMs::Alarm_ctor} ......................................................*/
void Alarm_ctor(Alarm *const me);
/*$enddecl${HSMs::Alarm_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^*/

#endif
